{"version":3,"sources":["webpack://VuePetitStore/webpack/universalModuleDefinition","webpack://VuePetitStore/webpack/bootstrap","webpack://VuePetitStore/./src/curtain.coffee","webpack://VuePetitStore/./src/device.coffee","webpack://VuePetitStore/./src/firebase.coffee","webpack://VuePetitStore/./src/form.coffee","webpack://VuePetitStore/./src/index.coffee","webpack://VuePetitStore/./src/observer.coffee","webpack://VuePetitStore/./src/path.coffee","webpack://VuePetitStore/./src/poll.coffee","webpack://VuePetitStore/./src/storage.coffee","webpack://VuePetitStore/./src/struct.coffee","webpack://VuePetitStore/./src/timer.coffee","webpack://VuePetitStore/./src/uri.coffee","webpack://VuePetitStore/./src/vue.coffee","webpack://VuePetitStore/external \"dexie\"","webpack://VuePetitStore/external \"fancy-date\"","webpack://VuePetitStore/external \"firebase/app\"","webpack://VuePetitStore/external \"firebase/firestore\"","webpack://VuePetitStore/external \"lodash\"","webpack://VuePetitStore/external \"memory-orm\"","webpack://VuePetitStore/external \"tiny-cookie\""],"names":[],"mappings":"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","file":"lib/index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VuePetitStore\"] = factory();\n\telse\n\t\troot[\"VuePetitStore\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.coffee\");\n","_ = require 'lodash'\n\n\nmodule.exports =\n  curtain: (id)->\n    spots_id = \"#{id}_spots\"\n    space_id = \"#{id}_space\"\n    calc_id  = \"#{id}_calc\"\n    left_id   = \"#{id}_left\"\n    top_id    = \"#{id}_top\"\n    right_id  = \"#{id}_right\"\n    bottom_id = \"#{id}_bottom\"\n\n    directives:\n      [id]:\n        bind: (el, binding, { context })->\n          vm = context\n          vm.$refs[id] ?= []\n          vm.$refs[id].push el\n\n    data: ->\n      left = top = -Infinity\n      right = bottom = Infinity\n      [spots_id]: []\n      [id]: { left, top, right, bottom }\n\n    computed:\n      [left_id]:   -> o.left   < @[id].left   for o in @[spots_id]\n      [top_id]:    -> o.top    < @[id].top    for o in @[spots_id]\n      [right_id]:  -> @[id].right  < o.right  for o in @[spots_id]\n      [bottom_id]: -> @[id].bottom < o.bottom for o in @[spots_id]\n\n      [space_id]: ->\n        enter = =>\n          @[calc_id]()\n        leave = =>\n          left = top = 0\n          right = bottom = Infinity\n          @[id] = { left, top, right, bottom }\n        move = (e)=>\n          left = right = e.pageX ? e.changedTouches?[0]?.pageX\n          top = bottom = e.pageY ? e.changedTouches?[0]?.pageY\n          @[id] = { left, top, right, bottom }\n\n        scroll: enter\n        touchenter: enter\n        touchmove:  move\n        touchleave: leave\n        mouseenter: enter\n        mousemove:  move\n        mouseleave: leave\n\n    methods:\n      [calc_id]: ->\n        return unless list = @$refs[id]\n        @[spots_id] =\n          for o in list\n            if oo = o.getClientRects()?[0]\n              { left, top, right, bottom } = oo\n            else\n              left = top = Infinity\n              right = bottom = 0\n            { left, top, right, bottom }\n\n","geo_to_s = (n, mark, minus)->\n  n1 = parseInt n \n  n2 = parseInt n *       60 % 60\n  n3 = parseInt n *     3600 % 60\n  n4 = parseInt n *   216000 % 60\n  n5 = parseInt n * 12960000 % 60\n  mark = minus if n < 0\n  \"\"\"#{n1}°#{n2}′#{n3}″#{n4}‴#{n5}⁗#{mark}\"\"\"\n\nmks_to_s = (n, mark)->\n  n1 = parseInt n\n  n2 = parseInt n * 100 % 100\n  \"\"\"#{n1}#{mark}#{n2}c#{mark}\"\"\"\n\nthreshold_to_s = (newVal, margin, keep, lo, l1, l2, l3)->\n  switch\n    when newVal < -margin\n      l1\n    when margin < newVal\n      l3\n    when lo == l1 && newVal < -keep\n      l1\n    when lo == l3 && keep < newVal\n      l3\n    else\n      l2\n\nxyz = (newVal, oldVal)->\n  { x, y, z } = newVal\n  { margin, keep } = m\n  margin *= 10\n  keep   *= 10\n  oldVal.label_x = lx = threshold_to_s x, margin, keep, oldVal.label_x, \"右\", \"\", \"左\"\n  oldVal.label_y = ly = threshold_to_s y, margin, keep, oldVal.label_y, \"上\", \"\", \"下\"\n  oldVal.label_z = lz = threshold_to_s z, margin, keep, oldVal.label_z, \"表\", \"\", \"裏\"\n  oldVal.label = \"\"\"#{lx}#{ly}#{lz}\"\"\"\n\n  oldVal.x = x\n  oldVal.y = y\n  oldVal.z = z\n\nabg = (newVal, oldVal)->\n  { alpha, beta, gamma } = newVal\n  { margin, keep } = m\n  margin *= 360\n  keep   *= 360\n  oldVal.label_alpha = la = threshold_to_s alpha, margin, keep, oldVal.label_alpha, \"押下\", \"\", \"引上\"\n  oldVal.label_beta  = lb = threshold_to_s beta,  margin, keep, oldVal.label_beta,  \"左巻\", \"\", \"右巻\"\n  oldVal.label_gamma = lg = threshold_to_s gamma, margin, keep, oldVal.label_gamma, \"右折\", \"\", \"左折\"\n  oldVal.label = \"\"\"#{la}#{lb}#{lg}\"\"\"\n\n  oldVal.alpha = alpha\n  oldVal.beta  = beta\n  oldVal.gamma = gamma\n\nxyz_new = ->\n  x: 0\n  y: 0\n  z: 0\n  label: \"\"\n  label_x: \"\"\n  label_y: \"\"\n  label_z: \"\"\n\nabg_new = ->\n  alpha: 0\n  beta:  0\n  gamma: 0\n  absolute: 0\n  label: \"\"\n  label_alpha: \"\"\n  label_beta:  \"\"\n  label_gamma: \"\"\n\naccel = xyz_new()\ngravity = xyz_new()\naccel_with_gravity = xyz_new()\n\ngyro = abg_new()\nrotate = abg_new()\n\ngamepads = []\n\ngeo =\n  label: \"\"\n  latitude:  0\n  longitude: 0\n  altitude:  0\n  heading:   0\n  speed:     0\n\nscroll =\n  top:    0\n  center: 0\n  bottom: 0\n\n  left:   0\n  right:  0\n\n  horizon: 0\n  height:  0\n  width:   0\n\n  size:         0\n  aspect_ratio: 1\n  is_square:     true\n  is_oblong:    false\n  is_horizontal: true\n  is_vertical:  false\n\n\ndeviceorientation =\n  count: 0\n  call: ({ alpha, beta, gamma, absolute })->\n    gyro.alpha = alpha\n    gyro.beta  = beta\n    gyro.gamma = gamma\n    gyro.absolute = absolute\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless window?\n        return if @count++\n        window.addEventListener \"deviceorientation\", @call\n\n      beforeDestroy: =>\n        return if --@count\n        window.removeEventListener \"deviceorientation\", @call\n\ndevicemotion =\n  count: 0\n  call: ({ interval, acceleration, accelerationIncludingGravity, rotationRate })->\n    calc_gravity =\n      x: accelerationIncludingGravity.x - acceleration.x\n      y: accelerationIncludingGravity.y - acceleration.y\n      z: accelerationIncludingGravity.z - acceleration.z\n    xyz acceleration,                 accel\n    xyz accelerationIncludingGravity, accel_with_gravity\n    xyz calc_gravity,                 gravity\n\n    abg rotationRate, rotate\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless window?\n        return if @count++\n        window.addEventListener \"devicemotion\", @call\n\n      beforeDestroy: =>\n        return if --@count\n        window.removeEventListener \"devicemotion\", @call\n\ngeolocation =\n  watch_id: null\n  count: 0\n  call: ({ coords, timestamp })->\n    { accuracy, altitudeAccuracy, latitude, longitude, altitude, heading, speed } = coords\n    altitude ?= 0\n\n    geo.label = \"\"\"#{geo_to_s(longitude,'N','S')} #{geo_to_s(latitude,'E','W')} #{mks_to_s(altitude,'m')}\"\"\"\n    geo.longitude = longitude\n    geo.latitude = latitude\n    geo.altitude = altitude\n    geo.heading = heading\n    geo.speed = speed\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless navigator?.geolocation?\n        return if @count++\n        @watch_id = navigator.geolocation.watchPosition @call, ({ code })->\n          console.log \"watchPosition error = #{code}\"\n        ,\n          enableHighAccuracy: true\n          maximumAge: 60 * 1000\n          timeout:    10 * 1000\n      beforeDestroy: =>\n        return if --@count\n        navigator.geolocation.clearWatch @watch_id\n\nscroll_poll =\n  count: 0\n  call: ->\n    scroll.top = parseInt scrollY\n    scroll.left = parseInt scrollX\n    scroll.width = parseInt innerWidth\n    scroll.height = parseInt innerHeight\n    { height, top, left, width } = scroll\n\n    if width < height\n      scroll.size = width\n      scroll.aspect_ratio = height / width\n      scroll.is_vertical = true\n      scroll.is_horizontal = false\n    else\n      scroll.size = height\n      scroll.aspect_ratio = width / height\n      scroll.is_vertical = false\n      scroll.is_horizontal = true\n    scroll.is_square = !( scroll.is_oblong = 1.35 < scroll.aspect_ratio )\n\n    scroll.horizon = height >> 1\n    scroll.center = top + (height >> 1)\n    scroll.bottom = top + height\n    scroll.right = left + width\n\n    requestAnimationFrame scroll_poll.call\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless window?\n        return if @count++\n        @call()\n\n      beforeDestroy: =>\n\ngamepad_poll =\n  count: 0\n  conn: ({ gamepad: { timestamp, connected, buttons, axes } })->\n    { index, timestamp, connected, buttons, axes } = gamepad\n    gamepads[index] = gamepad\n    if connected\n      # join\n    else\n      # bye\n  call: ->\n    unless window.ongamepadconnected\n      for gamepad in navigator.getGamepads()\n        { index } = gamepad\n        gamepads[index] = gamepad\n      \n    requestAnimationFrame gamepad_poll.call\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless window?\n        return if @count++\n        @call()\n        if window.ongamepadconnected\n          window.addEventListener \"gamepadconnected\", @conn\n          window.addEventListener \"gamepaddisconnected\", @conn\n\n      beforeDestroy: =>\n        return if --@count\n        if window.ongamepadconnected\n          window.removeEventListener \"gamepadconnected\", @conn\n          window.removeEventListener \"gamepaddisconnected\", @conn\n\n\nmodule.exports = m =\n  margin: 0.4\n  keep:   0.1\n  device: ({ margin, keep })->\n    m.margin = margin\n    m.keep   = keep\n\n  gamepad: ->\n    gamepad_poll.with\n      data: ->\n        { gamepads }\n\n  geo: ->\n    geolocation.with\n      data: ->\n        { geo }\n\n  gyro: ->\n    deviceorientation.with\n      data: ->\n        { gyro }\n\n  accel: ->\n    devicemotion.with\n      data: ->\n        { accel, gravity, accel_with_gravity }\n\n  rotate: ->\n    devicemotion.with\n      data: ->\n        { rotate }\n\n  scroll: ->\n    scroll_poll.with\n      data: ->\n        { scroll }\n\n      methods:\n        scroll_to: ({ query, mode })->\n          return unless el = document?.querySelector query\n          return unless { height, top } = el.getBoundingClientRect()\n          switch mode\n            when 'center'\n              top += (height >> 1) - scroll.horizon\n            when 'bottom'\n              top +=  height\n\n          console.log \" go to #{query}(#{mode}) as #{top}px\"\n          window.scrollBy 0, top\n","Mem = require \"memory-orm\"\n\nif window?\n  firebase = require \"firebase/app\"\n  require \"firebase/firestore\"\n\nfirestore = ->\n  store = firebase.firestore()\n  store.settings {}\n  store\n\ncopy_to_str = (key)->(...args)->\n  @str += \" #{key}:\"\n  for arg in args\n    @str += arg\n    @str += \":\"\n  @ref = @ref[key] ...args\n  @\n\nclass FirestoreQueryProxy\n  constructor: (@str, @ref)->\n  orderBy: copy_to_str \"orderBy\"\n  limit:   copy_to_str \"limit\"\n  where:   copy_to_str \"where\"\n\njoinSnapshot = (target, shot)->\n  eject = ->\n  (gate)->\n    eject()\n    eject =\n      if gate && @[target]\n        console.log \"join\", gate\n        @[target].onSnapshot shot.bind(@), (err)->\n          console.error err\n      else\n        ->\n\nfirestore_base = (id, path, querys, { del, add, snap, shot })->\n  default_id = \"#{id}_default\"\n\n  join_id = \"#{id}_join\"\n  snap_id = \"#{id}_snap\"\n  path_id = \"#{id}_path\"\n\n  add_id  = \"#{id}_add\"\n  del_id  = \"#{id}_del\"\n\n  joins = []\n  watch = {}\n  computed =\n    _firestore: firestore\n    [path_id]: path\n    [snap_id]: ->\n      if @[path_id]\n        snap.call @, @[path_id]\n\n  if querys?.length\n    querys.forEach (query, idx)->\n      query_id = \"#{id}_query_#{idx}_query\"\n      ref_id   = \"#{id}_query_#{idx}_ref\"\n      str_id   = \"#{id}_query_#{idx}_str\"\n\n      computed[ref_id] = ->\n        return unless @[path_id]\n        query.call @, new FirestoreQueryProxy @[path_id], @[snap_id]\n\n      computed[str_id] = ->\n        @[ref_id]?.str\n\n      computed[query_id] = ->\n        if @[str_id]\n          @[ref_id].ref\n\n      join = joinSnapshot query_id, shot\n      joins.push [join, str_id]\n      watch[str_id] = join\n\n  else\n    join = joinSnapshot snap_id, shot\n    joins.push [join, path_id]\n    watch[path_id] = join\n\n  beforeDestroy: ->\n    for [join, join_id] in joins\n      join.call @, undefined\n\n  mounted: ->\n    @[default_id] = @[id]\n    for [join, join_id] in joins\n      join.call @, @[join_id]\n\n  methods:\n    [add_id]: add\n    [del_id]: del\n\n  computed: computed\n  watch:    watch\n\n\nmodule.exports = m =\n  firestore_models: (id, path, ...querys)->\n    snap_id = \"#{id}_snap\"\n    set_key = id[..-2]\n    firestore_base id, path, querys,\n      del: (_id)->\n        return unless _id\n        @[snap_id]?.doc(_id).delete()\n      add: (doc)->\n        { _id } = doc\n        return unless _id\n        @[snap_id]?.doc(_id).set doc,\n          merge: true\n      snap: (path)->\n        @_firestore.collection path\n      shot: (qs)->\n        qs.docChanges().forEach ({ newIndex, oldIndex, type, doc })=>\n          switch type\n            when 'added', 'modified'\n              Mem.Set[set_key].add doc.data()\n            when 'removed'\n              Mem.Set[set_key].remove doc.id\n\n  firestore_model: (id, path)->\n    snap_id = \"#{id}_snap\"\n    set_key = id\n    firestore_base id, path, null,\n      del: ->\n        @[snap_id]?.delete()\n      add: (doc)->\n        @[snap_id]?.set doc,\n          merge: true\n      snap: (path)->\n        @_firestore.doc path\n      shot: (doc)->\n        if o = doc.data()\n          Mem.Set[set_key].add o\n        else\n          Mem.Set[set_key].remove doc.id\n\n  firestore_collection: (id, path, ...querys)->\n    snap_id = \"#{id}_snap\"\n    firestore_base id, path, querys,\n      del: (_id)->\n        return unless _id\n        @[snap_id]?.doc(_id).delete()\n      add: (doc)->\n        { _id } = doc\n        return unless _id\n        @[snap_id]?.doc(_id).set doc,\n          merge: true\n      snap: (path)->\n        @_firestore.collection path\n      shot: (qs)->\n        qs.docChanges().forEach ({ newIndex, oldIndex, type, doc })=>\n          switch type\n            when 'added', 'modified'\n              @[id][doc.id] = doc.data()\n            when 'removed'\n              delete @[id][doc.id]\n\n  firestore_doc: (id, path)->\n    snap_id = \"#{id}_snap\"\n    default_id = \"#{id}_default\"\n    firestore_base id, path, null,\n      del: ->\n        @[snap_id]?.delete()\n      add: (doc)->\n        @[snap_id]?.set doc,\n          merge: true\n      snap: (path)->\n        @_firestore.doc path\n      shot: (doc)->\n        @[id] =\n          if doc.exists\n            doc.data()\n          else\n            @[default_id]\n","\nchk = ( all, local, msg, b )->\n  all.push msg\n  if b\n    local.push msg\n\nmodule.exports =\n  error: (id, cb)->\n    local_id = \"#{id}_local\"\n    all_id = \"#{id}_all\"\n    is_id = \"is_#{id}\"\n\n    props: [id]\n\n    data: ->\n      [all_id]: []\n\n    computed:\n      [local_id]: ->\n        cb.call @, chk.bind null, @[all_id] = [], local = []\n        local\n\n    watch:\n      [local_id]: (local)->\n        ary = _.difference @[id], @[all_id]\n        ary = _.union ary, local\n        @$emit \"update:#{id}\", ary\n\n  form: (id, cb, origin)->\n    origin_id = \"#{id}_origin\"\n    base_id = \"#{id}_base\"\n    init_id = \"#{id}_init\"\n    is_edit_id = \"is_#{id}_edit\"\n    keys = []\n\n    data: ->\n      form = cb.call @\n      keys = Object.keys form\n      base = {}\n      for key in keys\n        form[key] = base[key] = null\n\n      [id]: form\n      [base_id]: base\n\n    computed:\n      [origin_id]: origin\n      [is_edit_id]: ->\n        ! _.isEqual @[id], @[base_id]\n\n    methods:\n      [init_id]: (src)->\n        for key in keys\n          @[id][key] = @[base_id][key] = src[key]\n\n    watch:\n      [origin_id]: (o)->\n        @[init_id] o\n","\nmodule.exports = {\n  ...require \"fancy-date\"\n  ...require \"./struct\"\n  ...require \"./timer\"\n  ...require \"./uri\"\n  ...require \"./curtain\"\n  ...require \"./observer\"\n  ...require \"./storage\"\n  ...require \"./firebase\"\n  ...require \"./device\"\n  ...require \"./poll\"\n  ...require \"./path\"\n  ...require \"./vue\"\n  ...require \"./form\"\n}","_ = require 'lodash'\n\n\nintersectionBase = (option)->\n  observer =\n    if IntersectionObserver?\n      new IntersectionObserver (doms)->\n        doms.forEach (o)->\n          o.target._cb_intersection\n            is_hit: o.isIntersecting\n            ratio: o.intersectionRatio\n            cross: o.intersectionRect\n            bound: o.boundingClientRect\n            root:  o.rootBounds\n\n      , option\n    else\n      observe: ->\n      unobserve: ->\n      disconnect: ->\n\n  (id)->\n    default_id = \"#{id}_default\"\n\n    bind: (el, binding, { context })->\n      vm = context\n      vm[default_id] = _.get vm, id\n      _.set vm, id, null\n      # vm[type_id] = types[vm[default_id].constructor]\n\n    inserted: (el, binding, { context })->\n      cb = (o)->\n        _.set @, id, \n          if o.is_hit\n            @[default_id]\n          else\n            null\n      el._cb_intersection = cb.bind context\n      observer.observe el\n\n    unbind: (el)->\n      observer.unobserve el\n      # observer.disconnect\n\nresize_observer =\n  if ResizeObserver?\n    new ResizeObserver (doms)->\n      doms.forEach (o)->\n        { width, height } = o.contentRect\n        width  = parseInt width\n        height = parseInt height\n        o.target._cb_resize { width, height }\n  else\n    observe: ->\n    unobserve: ->\n    disconnect: ->\n\nmodule.exports =\n  resize: (id)->\n    default_id = \"#{id}_default\"\n    type_id = \"#{id}_type\"\n    observer = resize_observer\n\n    bind: (el, binding, { context })->\n      vm = context\n      vm[default_id] = _.get vm, id\n      # vm[type_id] = types[vm[default_id].constructor]\n\n    inserted: (el, binding, { context })->\n      cb = (size)->\n        _.set @, id, size\n      el._cb_resize = cb.bind context\n      observer.observe el\n\n    unbind: (el)->\n      observer.unobserve el\n      observer.disconnect el\n\n  on_horizon: intersectionBase\n    root: null\n    rootMargin: '-50% 0% -50% 0%'\n    threshold: [0]\n\n  on_peek: intersectionBase\n    root: null\n    rootMargin: '25%'\n    threshold: [0]\n\n  on_appear: intersectionBase\n    root: null\n    rootMargin: '0%'\n    threshold: [0.5]\n","{ Query } = require 'memory-orm'\n\nmodule.exports = m =\n  path_by: (idx = 'idx', keys)->\n    idx_a = \"#{idx}_a\"\n    computed = {}\n    computed[idx_a] =\n      get: ->\n        @[idx]?.split(\"-\") || []\n\n    keys.forEach (name, at)->\n      return unless name\n      key  = \"#{name}_id\"\n      list = \"#{name}s\"\n      computed[key] =\n        get: ->\n          if at < @[idx_a].length\n            @[idx_a][0..at].join(\"-\")\n      computed[name] =\n        get: ->\n          Query[list].find @[key]\n    { computed }\n","Mem = require 'memory-orm'\n{ to_tempo } = require \"fancy-date\"\n\ndexie = null\npoll_request = ->\n  return unless document?\n  Dexie = require(\"dexie\").default\n  dexie = new Dexie 'poll-web'\n  dexie.version(1).stores\n    meta: '&idx'\n    data: '&idx'\n\n  poll_request = ->\n\n# has_last = {}\n\nis_cache = {}\nis_online = is_visible = false\n\n\n\npoll = (cb)->\n  mounted: ->\n    poll_request()\n    @timers = {}\n    window.addEventListener 'offline', @_waitwake\n    window.addEventListener 'online', @_waitwake\n    document.addEventListener 'visibilitychange', @_waitwake\n    @_waitwake()\n      \n  destroyed: ->\n    window.removeEventListener 'offline', @_waitwake\n    window.removeEventListener 'online', @_waitwake\n    document.removeEventListener 'visibilitychange', @_waitwake\n    for key, val of @timers\n      clearTimeout val\n\n  methods:\n    get_by_network: ->\n      for key, val of @timers\n        clearTimeout val\n\n      list = cb.call @\n      list.map ([name, id])=>\n        idx = [name, id].join(\"&\")\n        dexie.meta.delete idx\n        dexie.data.delete idx\n        is_cache[idx] = 0\n      @_waitwake()\n\n    _waitwake: ->\n      is_online  = window.navigator.onLine\n      is_visible = 'hidden' != document.visibilityState\n      is_ok = is_online && is_visible\n      if is_ok\n        list = cb.call @\n        await Promise.all list.map ([name, id])=>\n          @$store.dispatch name, { id, name, @timers }\n      else\n        for key, val of @timers\n          clearTimeout val\n\npoll.cache = (timestr = \"10s\", version = \"1.0.0\", vuex_id, cb)->\n  # console.log { timestr, timeout, url: cb('*') }\n  ({ dispatch, state, commit, rootState }, { id, name, timers })->\n    url = cb id\n    idx = [name, id].join(\"&\")\n\n    roop = ->\n      { last_at, write_at, next_at, timeout } = to_tempo timestr\n\n      get_pass = ->\n        wait = new Date - write_at\n        console.log { timestr, idx, wait, url: null }\n\n      get_by_lf = ->\n        meta = await dexie.data.get idx\n        Mem.State.store meta\n\n        wait = new Date - write_at \n        console.log { timestr, idx, wait, url: '(LF)' }\n\n      get_by_network = ->\n        meta = await poll._api[name] url, id\n        meta.idx = idx\n\n        await dexie.data.put meta\n        wait = new Date - write_at\n        console.log { timestr, idx, wait, url }\n\n      try\n        if write_at < is_cache[idx]\n          get_pass()\n        else\n          # IndexedDB metadata not use if memory has past data, \n          unless 0 < is_cache[idx]\n            meta = await dexie.meta.get idx\n            unless meta?.version == version\n              meta = null\n\n          switch\n            when write_at < meta?.next_at\n              await get_by_lf()\n\n            when 0 < meta?.next_at\n              await get_by_lf()\n              await get_by_network()\n\n            else\n              await get_by_network()\n              dexie.meta.put { idx, version, next_at }\n        is_cache[idx] = next_at\n      catch e\n        console.error e\n\n      if timeout < 0x7fffffff  #  ほぼ25日\n        timers[url] = setTimeout roop, timeout\n    roop()\n\npoll.caches = (...[timestr, version], actions)->\n  for key, cb of actions\n    actions[key] = poll.cache timestr, version, key, cb\n  actions\n\npoll._api =\n  fetch: (url, cb)->\n    res = await fetch url\n    data = await res.json()\n    Mem.State.transaction ->\n      cb data\n\npoll.api = (o)->\n  Object.assign poll._api, o\n\nmodule.exports = { poll }\n","_ = require 'lodash'\nCookie = require 'tiny-cookie'\n{ types, relative_to } = require \"./struct\"\n\n$session_storage = {}\n$local_storage = {}\n$cookie_storage = {}\n\ncapture = (s, type, _default)->\n  if s?\n    type.by_str s\n  else\n    _default\n\nmodule.exports = m =\n  sessionStorage: (id)->\n    global_id = \"$data.$session_storage.#{id}\"\n    default_id = \"#{id}_default\"\n    type_id = \"#{id}_type\"\n\n    unless _.has $session_storage, id\n      _.set $session_storage, id, null\n\n    data: -> { $session_storage }\n\n    created: ->\n      @[default_id] = _.get @, id\n      @[type_id] = types[@[default_id].constructor]\n\n    mounted: ->\n      s = window.sessionStorage.getItem id\n      val = capture s, @[type_id], @[default_id]\n      _.set @, id, val\n      _.set $session_storage, id, val\n\n    watch:\n      [global_id]: ( val )->\n        _.set @, id, val\n\n      [id]: ( val )->\n        _.set $session_storage, id, val\n        if val?\n          s = @[type_id].to_str val\n          window.sessionStorage.setItem id, s\n        else\n          window.sessionStorage.removeItem id\n\n  localStorage: (id)->\n    global_id = \"$data.$local_storage.#{id}\"\n    default_id = \"#{id}_default\"\n    handle_id = \"#{id}_handle\"\n    type_id = \"#{id}_type\"\n\n    unless _.has $local_storage, id\n      _.set $local_storage, id, null\n\n    data: -> { $local_storage }\n\n    created: ->\n      @[default_id] = _.get @, id\n      @[type_id] = types[@[default_id].constructor]\n\n    mounted: ->\n      s = window.localStorage.getItem id\n      val = capture s, @[type_id], @[default_id]\n      _.set @, id, val\n      _.set $local_storage, id, val\n      @[handle_id] = ({ key, newValue })=>\n        if key == id\n          val = capture newValue, @[type_id], @[default_id]\n          _.set @, id, val\n          _.set $local_storage, id, val\n\n      window.addEventListener \"storage\", @[handle_id]\n    \n    beforeDestroy: ->\n      window.removeEventListener \"storage\", @[handle_id]\n\n    watch:\n      [global_id]: ( val )->\n        _.set @, id, val\n\n      [id]: ( val )->\n        _.set $local_storage, id, val\n        if val?\n          s = @[type_id].to_str val\n          window.localStorage.setItem id, s\n        else\n          window.localStorage.removeItem id\n\n  cookie: (id, options = { expires: '1M' })->\n    global_id = \"$data.$cookie_storage.#{id}\"\n    default_id = \"#{id}_default\"\n    type_id = \"#{id}_type\"\n\n    unless _.has $cookie_storage, id\n      _.set $cookie_storage, id, null\n\n    data: -> { $cookie_storage }\n\n    created: ->\n      @[default_id] = _.get @, id\n      @[type_id] = types[@[default_id].constructor]\n\n    mounted: ->\n      s = Cookie.get id\n      val = capture s, @[type_id], @[default_id]\n      _.set @, id, val\n      _.set $cookie_storage, id, val\n\n    watch:\n      [global_id]: ( val )->\n        _.set @, id, val\n\n      [id]: ( val )->\n        _.set $cookie_storage, id, val\n        if val?\n          s = @[type_id].to_str val\n          Cookie.set id, s, options\n        else\n          Cookie.remove id\n\n","_ = require 'lodash'\n\nzero = [null, undefined, \"\", NaN]\n\nsimple_route = (o)->\n  for key, val of o.query\n    if zero.includes val\n      delete o.query[key]\n  o\n\nrelative_to = ({ name, params, query, hash }, o, is_replace)->\n  unless is_replace\n    params = _.cloneDeep params\n    query  = _.cloneDeep query\n  to = { name, params, query, hash }\n  for key, val of o\n    tgt =\n      if params.hasOwnProperty key\n        params\n      else\n        query\n    tgt[key] = val\n  simple_route to\n\nto_String = (nil)-> (u)->\n  if zero.includes u\n    nil\n  else\n    String u\n\nto_Number = (u)->\n  if zero.includes u\n    NaN\n  else\n    Number u\n\nto_Array = (u)->\n  if zero.includes u\n    []\n  else\n    if u instanceof Array then u else Array u\n\nmodule.exports = {\n  simple_route\n  relative_to\n  types:\n    [Number]:\n      to_str: to_String \"\"\n      by_str: to_Number\n      by_url: to_Number\n    [String]:\n      to_str: to_String \"\"\n      by_str: to_String undefined\n      by_url: to_String \"\"\n    [Array]:\n      to_str: (o)-> JSON.stringify(o) || []\n      by_str: (o)-> JSON.parse(o) || []\n      by_url: to_Array\n    [Object]:\n      to_str: (o)-> JSON.stringify(o) || {}\n      by_str: (o)-> JSON.parse(o) || {}\n}\n","_ = require 'lodash'\n{ to_msec, to_tempo_bare, to_relative_time_distance } = require \"fancy-date\"\n\n\ntime_base = (method)-> (id, { times })->\n  default_id = \"#{id}_default\"\n  tail_ids = \"#{id}_tail_ids\"\n  tail_funcs = \"#{id}_tail_funcs\"\n\n  data: ->\n    o = {}\n    times.forEach (time)=>\n      tail_id = \"#{id}_#{time}\"\n      _.set o, tail_id, null\n    o\n\n  created: ->\n    @[tail_ids] = []\n    @[tail_funcs] = []\n\n    id_value = _.get @, id\n\n    times.forEach (time)=>\n      msec = to_msec time\n      tail_id = \"#{id}_#{time}\"\n      _.set @, tail_id, id_value\n\n      @[tail_ids].push tail_id\n      @[tail_funcs].push method (value)=>\n        _.set @, tail_id, value\n      , msec\n\n    @[default_id] = id_value\n\n  watch:\n    [id]: (newValue)->\n      for tail_func, idx in @[tail_funcs]\n        tail_func newValue\n\ndebounces = time_base _.debounce\nthrottles = time_base _.throttle\ndelays = time_base (cb, msec)-> (value)->\n  setTimeout cb, msec, value\n\n\nrelative = (id, { limit, format } = {})->\n  now_id = \"#{id}_now\"\n  msec_id = \"#{id}_msec\"\n  tick_id = \"#{id}_tick\"\n  text_id = \"#{id}_text\"\n  limit_id = \"#{id}_limit\"\n  tempo_id = \"#{id}_tempo\"\n  distance_id = \"#{id}_distance\"\n  interval_id = \"#{id}_interval\"\n\n  data: ->\n    [now_id]: Date.now()\n    [limit_id]: to_msec limit\n\n  computed:\n    [msec_id]: ->\n      @[now_id] - new Date(@[id]).getTime()\n\n    [distance_id]: ->\n      to_relative_time_distance @[msec_id]\n\n    [tempo_id]: ->\n      [, interval] = @[distance_id]\n      to_tempo_bare interval, 0, @[msec_id]\n\n    [text_id]: ->\n      msec = @[msec_id]\n      limit_msec = @[limit_id]\n      [,,, text] = @[distance_id]\n      { now_idx } = @[tempo_id]\n\n      if limit_msec < msec\n        clearInterval @[interval_id]\n        @[interval_id] = null\n        return format @[id]\n\n      @[tick_id]\n      if msec < -limit_msec\n        return format @[id]\n      text.replace '%s', Math.abs now_idx\n\n    [tick_id]: ->\n      { timeout } = @[tempo_id]\n      if @[interval_id]\n        clearInterval @[interval_id]\n      @[interval_id] = setInterval =>\n        @[now_id] = Date.now()\n        @[tick_id]\n      , timeout\n      return\n\n  beforeDestroy: ->\n    clearInterval @[interval_id]\n    @[interval_id] = null\n\nmodule.exports = { relative, delays, debounces, throttles }\n","_ = require 'lodash'\n{ types, relative_to } = require \"./struct\"\n\nzero = [null, undefined, \"\", NaN]\n\nrouteBase = (change_url)-> (id)->\n  default_id = \"#{id}_default\"\n  type_id = \"#{id}_type\"\n\n  route_into = (newRoute, oldRoute)->\n    s = newRoute.params[id] || newRoute.query[id]\n    val =\n      if zero.includes s\n        @[default_id]\n      else\n        @[type_id].by_url s\n    _.set @, id, val\n\n\n  created: ->\n    @[default_id] = _.get @, id\n    @[type_id] = types[@[default_id].constructor]\n\n  # for changed component.\n  mounted: ->\n    s = @$route.params[id] || @$route.query[id]\n    unless zero.includes s\n      val = @[type_id].by_url s\n      _.set @, id, val\n\n  # for same component but uri changed.\n  beforeRouteEnter: (newRoute, oldRoute, next)->\n    next (vm)->\n      route_into.call vm, newRoute, oldRoute\n\n  # for same component but uri changed.\n  beforeRouteUpdate: (newRoute, oldRoute, next)->\n    next()\n    route_into.call @, newRoute, oldRoute\n\n  watch:\n    [id]: ( newVal )->\n      { location, href } = @$router.resolve relative_to @$route, { [id]: newVal }, true\n      change_url.call @, href\n\nmodule.exports = m =\n  replaceState: routeBase (href)->\n    history.replaceState null, null, href\n\n  pushState: routeBase (href)->\n    history.pushState null, null, href\n","_ = require 'lodash'\n\n$shared_memory = {}\n\nmodule.exports = m =\n  share: (id)->\n    $shared_memory[id] ?= null\n\n    data: ->\n      { $shared_memory }\n    computed:\n      [id]:\n        get: ->\n          $shared_memory[id]\n        set: (o)->\n          $shared_memory[id] = o\n\n  vuex_read: (id, opt)->\n    dir = (opt.on || \"\").split('.')\n    getter = [...dir[0..-1], id].join('.')\n\n    computed:\n      [id]:\n        get: ->\n          _.get @$store.state, getter\n\n  vuex: (id, opt)->\n    dir = (opt.on || \"\").split('.')\n    mutation = [dir[0], 'update'].join('/')\n    getter = [...dir[0..-1], id].join('.')\n    setter = [...dir[1..-1], id].join('.')\n  \n    computed:\n      [id]:\n        get: ->\n          _.get @$store.state, getter\n        set: (val)->\n          o = _.set {}, setter, val\n          @$store.commit mutation, o\n\n","module.exports = require(\"dexie\");","module.exports = require(\"fancy-date\");","module.exports = require(\"firebase/app\");","module.exports = require(\"firebase/firestore\");","module.exports = require(\"lodash\");","module.exports = require(\"memory-orm\");","module.exports = require(\"tiny-cookie\");"],"sourceRoot":""}